1. Циклы в нашей жизни
Очень часто в нашей жизни приходится выполнять однотипные действия много раз. Например, мне нужно отсканировать многостраничный документ. Тогда мы снова и снова выполняем один и тот же порядок действий:

Положить первую страницу на сканер
Нажать кнопку сканировать
Положить следующую страницу
Вручную это делать сложно. Было бы хорошо, если бы этот процесс можно было как-то автоматизировать.
Или еще пример: я хочу пометить все непрочитанные письма в почтовом ящике как спам. Когда-то их нужно было выделять по одному и помечать как спам.
Но программисты народ ленивый, поэтому эту функцию уже давно автоматизировали: вы просто выделяете любой список писем и нажимаете кнопку «пометить как спам», а ваш почтовый клиент сам проходится по этому списку и переносит каждое письмо в папку спам.
Что тут сказать? Удобно, когда компьютер или программа могут сделать сотни и тысячи рутинных операций за один клик. Сейчас этому научитесь и вы.

2. Цикл while
Оператор if-else существенно расширил наши возможности программирования: теперь можно писать программы, которые выполняют разные действия в разных ситуациях. Но есть еще одна вещь, которая сделает наши программы на порядок мощнее — это циклы.
В Java есть 4 вида циклов: while, for, for-each и do-while. Сейчас мы разберем самый первый из них.
Оператор цикла while очень простой и состоит всего из двух частей: условие и тело цикла. Тело цикла выполняется снова и снова, пока условие равно true. Общий вид цикла while такой:

while (условие)
   команда;

или

while (условие)
{
   блок команд
}

пример:
int  n = 5;
while (n > 0)
{
   System.out.println(n);
   n--;
}


пример2:
int  n = 0;
while (n < 10)
{
   System.out.println(n);
   n++;
}

Пример3:
Программа считывает с клавиатуры числа до тех пор, пока вводят именн
Scanner console = new Scanner(System.in);
while(console.hasNextInt())
{
   int x = console.nextInt();
}

Пример4:
Программа будет вводить строки с клавиатуры,
пока не будет введена строка exit.
Scanner console = new Scanner(System.in);
boolean isExit = false;
while (!isExit)
{
   String s = console.nextLine();
   isExit = s.equals("exit");
}




